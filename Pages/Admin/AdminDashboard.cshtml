@page



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Vista</title>
    <link href="~/css/adminsidebar.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #f5f5f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .dashboard-wrapper {
            display: flex;
            min-height: 100vh;
        }
        /* Main content area */
        .main-content {
            flex: 1;
            padding: 20px;
            position: relative;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding: 10px 20px;
        }

            .header h1 {
                font-size: 28px;
                font-weight: 700;
                color: #333;
            }

        .header-right {
            display: flex;
            align-items: center;
        }

        .notification-icon, .settings-icon {
            background: none;
            border: none;
            font-size: 22px;
            color: #4c30f5;
            margin-right: 20px;
            cursor: pointer;
            position: relative;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: #ff4757;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .notification-menu {
            position: absolute;
            top: 60px;
            right: 120px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            width: 300px;
            padding: 15px;
            z-index: 100;
            display: none;
        }

            .notification-menu.show {
                display: block;
            }

        .notification-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #f0f0f0;
        }

        .notification-item {
            padding: 10px 0;
            border-bottom: 1px solid #f0f0f0;
        }

            .notification-item:last-child {
                border-bottom: none;
            }

        .notification-title {
            font-weight: 600;
            font-size: 14px;
            margin-bottom: 5px;
        }

        .notification-desc {
            font-size: 12px;
            color: #777;
        }

        .notification-time {
            font-size: 11px;
            color: #999;
            margin-top: 5px;
        }

        .user-profile {
            display: flex;
            align-items: center;
            cursor: pointer;
        }

        .user-info {
            text-align: right;
            margin-right: 10px;
        }

        .user-name {
            font-size: 14px;
            font-weight: 600;
        }

        .user-role {
            font-size: 12px;
            color: #777;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            overflow: hidden;
            background-color: #e0e0e0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #333;
            font-weight: bold;
        }

            .user-avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        /* Dashboard cards */
        .stats-cards {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 20px;
        }

        .stats-card {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            display: flex;
            align-items: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .stats-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        .stats-card-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            margin-right: 15px;
            font-size: 24px;
            color: #4c30f5;
        }

        .stats-card-content h3 {
            font-size: 14px;
            color: #777;
            margin-bottom: 5px;
        }

        .stats-card-content .value {
            font-size: 22px;
            font-weight: 700;
            color: #333;
        }

        .stats-card-content .money {
            color: #333;
        }

        /* Dashboard content grids */
        .dashboard-content {
            display: grid;
            grid-template-columns: 65% 35%;
            gap: 20px;
            margin-bottom: 20px;
        }

        .revenue-chart {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .revenue-total {
            font-size: 28px;
            font-weight: 700;
            color: #333;
            margin-bottom: 5px;
        }

        .revenue-label {
            font-size: 14px;
            color: #777;
        }

        .revenue-percentage {
            font-size: 14px;
            color: #27ae60;
            display: flex;
            align-items: center;
        }

        .chart-tabs {
            display: flex;
            gap: 10px;
        }

        .chart-tab {
            background-color: #f5f5f7;
            border: none;
            border-radius: 5px;
            padding: 8px 15px;
            font-size: 14px;
            color: #777;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .chart-tab.active {
                background-color: #4c30f5;
                color: white;
            }

        .chart-container {
            height: 250px;
            position: relative;
            margin-top: 20px;
        }

        .chart-label {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

            .chart-label span {
                font-size: 12px;
                color: #777;
            }

        .chart-status {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }

        .status-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: #27ae60;
            margin-right: 5px;
        }

        .activity-chart {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .activity-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .activity-filter select {
            border: 1px solid #e0e0e0;
            background-color: white;
            color: #333;
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        .activity-bars {
            display: flex;
            justify-content: space-between;
            align-items: flex-end;
            height: 200px;
            margin-bottom: 10px;
            padding: 20px 0;
        }

        .activity-bar-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            position: relative;
        }

        .activity-bar {
            width: 8px;
            background-color: #4c30f5;
            border-radius: 10px;
            margin-bottom: 10px;
            transition: height 0.5s ease;
        }

        .activity-month {
            font-size: 10px;
            color: #777;
            text-align: center;
            position: absolute;
            bottom: -20px;
            transform: translateX(-50%);
            left: 50%;
            width: auto;
            white-space: nowrap;
        }

        .dashboard-bottom {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
        }

        .services-pie, .calendar-section, .tasks-section {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

            .section-header h2 {
                font-size: 16px;
                font-weight: 600;
                color: #333;
            }

        .section-filter select {
            border: 1px solid #e0e0e0;
            background-color: white;
            color: #333;
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        .pie-chart {
            position: relative;
            width: 150px;
            height: 150px;
            margin: 0 auto;
        }

        .pie-legends {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
            margin-top: 20px;
            gap: 10px;
        }

        .pie-legend {
            display: flex;
            flex-direction: column;
            align-items: center;
            min-width: 80px;
        }

        .legend-dot {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-bottom: 5px;
        }

        .legend-label {
            font-size: 12px;
            color: #777;
            text-align: center;
        }

        .legend-value {
            font-size: 16px;
            font-weight: 600;
            color: #333;
        }

        /* Calendar */
        .calendar {
            width: 100%;
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .month-selector {
            display: flex;
            align-items: center;
        }

        .calendar-grid {
            width: 100%;
            border-collapse: collapse;
        }

            .calendar-grid th, .calendar-grid td {
                text-align: center;
                padding: 8px;
                font-size: 14px;
            }

            .calendar-grid th {
                color: #777;
                font-weight: 500;
            }

            .calendar-grid td {
                color: #333;
            }

        .calendar-day {
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .calendar-day:hover {
                background-color: #f0f0f0;
            }

            .calendar-day.active {
                background-color: #4c30f5;
                color: white;
            }

            .calendar-day.today {
                border: 1px solid #4c30f5;
            }

            .calendar-day.other-month {
                color: #ccc;
            }

        /* Tasks */
        .task-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
            max-height: 200px;
            overflow-y: auto;
        }

        .task-item {
            display: flex;
            align-items: center;
        }

        .task-checkbox {
            width: 20px;
            height: 20px;
            border-radius: 4px;
            border: 2px solid #ddd;
            margin-right: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            transition: all 0.2s ease;
            flex-shrink: 0;
        }

            .task-checkbox:hover {
                border-color: #4c30f5;
            }

            .task-checkbox.checked {
                background-color: #4c30f5;
                border-color: #4c30f5;
            }

        .task-name {
            font-size: 14px;
            flex: 1;
            color: #333;
            word-break: break-word;
        }

            .task-name.completed {
                text-decoration: line-through;
                color: #999;
            }

        .task-actions {
            display: flex;
            align-items: center;
        }

            .task-actions button {
                background: none;
                border: none;
                font-size: 16px;
                color: #777;
                cursor: pointer;
                padding: 5px;
            }

                .task-actions button:hover {
                    color: #4c30f5;
                }

        .task-menu {
            position: absolute;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 10px 0;
            min-width: 120px;
            z-index: 100;
            display: none;
        }

            .task-menu.show {
                display: block;
            }

        .task-menu-item {
            padding: 8px 15px;
            font-size: 14px;
            color: #333;
            cursor: pointer;
        }

            .task-menu-item:hover {
                background-color: #f5f5f7;
            }

            .task-menu-item.delete {
                color: #ff4757;
            }

        /* Add Task Form */
        .add-task-form {
            display: none;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #f0f0f0;
        }

            .add-task-form.show {
                display: block;
            }

        .add-task-input {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #e0e0e0;
            border-radius: 5px;
            font-size: 14px;
            margin-bottom: 10px;
        }

        .add-task-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .btn-cancel, .btn-add {
            padding: 6px 12px;
            border-radius: 5px;
            font-size: 13px;
            cursor: pointer;
        }

        .btn-cancel {
            background-color: #f5f5f7;
            border: 1px solid #e0e0e0;
            color: #333;
        }

        .btn-add {
            background-color: #4c30f5;
            border: none;
            color: white;
        }

        /* Loading animation for charts */
        .loading {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #4c30f5;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

       
    </style>
</head>
<body>
    <div class="dashboard-wrapper">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="logo">
                <img src="~/Images/logo 1.png" alt="Vista Logo">
                <span>vista.</span>
            </div>
            <nav class="nav-menu">
                <ul>
                    <li class="active">
                        <a href="/Admin/AdminDashboard">
                            <i class="fas fa-th-large"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminAnnouncements">
                            <i class="fas fa-bullhorn"></i>
                            <span>Announcements</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminBillingPayments">
                            <i class="fas fa-file-invoice-dollar"></i>
                            <span>Billing & Payments</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminFacilityReservation">
                            <i class="fas fa-calendar-check"></i>
                            <span>Facility Reservation</span>
                        </a>
                    </li>
                    <li>
                        <a href="~/Admin/AdminServiceRequests">
                            <i class="fas fa-hands-helping"></i>
                            <span>Service Requests</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminDocuments">
                            <i class="fas fa-file-alt"></i>
                            <span>Documents</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminAccountPrivileges">
                            <i class="fas fa-user-shield"></i>
                            <span>Account Privilege</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminEventCalendar">
                            <i class="fas fa-calendar-alt"></i>
                            <span>Events Calendar</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminEditProfile">
                            <i class="fas fa-user-circle"></i>
                            <span>Edit Profile</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header">
                <h1>Admin Dashboard</h1>
                <div class="header-right">
                    <button class="notification-icon" id="notificationBtn">
                        <i class="fas fa-bell"></i>
                        <div class="notification-badge">3</div>
                    </button>
                    <div class="notification-menu" id="notificationMenu">
                        <div class="notification-header">
                            <h3>Notifications</h3>
                            <span>Mark all as read</span>
                        </div>
                        <div class="notification-item">
                            <div class="notification-title">New Service Request</div>
                            <div class="notification-desc">Unit 5A submitted a maintenance request</div>
                            <div class="notification-time">2 minutes ago</div>
                        </div>
                        <div class="notification-item">
                            <div class="notification-title">Payment Received</div>
                            <div class="notification-desc">Unit 12B paid monthly dues</div>
                            <div class="notification-time">1 hour ago</div>
                        </div>
                        <div class="notification-item">
                            <div class="notification-title">Visitor Entry</div>
                            <div class="notification-desc">Visitor for Unit 7C registered at gate</div>
                            <div class="notification-time">3 hours ago</div>
                        </div>
                    </div>
                    <button class="settings-icon">
                        <i class="fas fa-cog"></i>
                    </button>
                    <div class="user-profile">
                        <div class="user-info">
                            <div class="user-name">Du Bois H.</div>
                            <div class="user-role">Administrator</div>
                        </div>
                        <div class="user-avatar">
                            <img src="/api/placeholder/40/40" alt="User Avatar">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stats Cards -->
            <div class="stats-cards">
                <div class="stats-card">
                    <div class="stats-card-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stats-card-content">
                        <h3>Average User Activity</h3>
                        <div class="value" id="activityValue">45.5 minutes</div>
                    </div>
                </div>
                <div class="stats-card">
                    <div class="stats-card-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="stats-card-content">
                        <h3>Total No. of Users</h3>
                        <div class="value" id="usersValue">28</div>
                    </div>
                </div>
                <div class="stats-card">
                    <div class="stats-card-icon">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                    <div class="stats-card-content">
                        <h3>Spend this month</h3>
                        <div class="value money" id="spendValue">$642.39</div>
                    </div>
                </div>
                <div class="stats-card">
                    <div class="stats-card-icon">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="stats-card-content">
                        <h3>Pending Requests</h3>
                        <div class="value" id="requestsValue">45/80</div>
                    </div>
                </div>
            </div>

            <!-- Main Dashboard Content -->
            <div class="dashboard-content">
                <!-- Revenue Chart Section -->
                <div class="revenue-chart">
                    <div class="chart-header">
                        <div>
                            <div class="revenue-total" id="revenueTotal">$37.5K</div>
                            <div class="revenue-label">Total Spent</div>
                            <div class="revenue-percentage">
                                <i class="fas fa-arrow-up" style="color: #27ae60; margin-right: 5px;"></i>
                                <span id="revenuePercentage">+2.45%</span>
                            </div>
                            <div class="chart-status">
                                <div class="status-dot"></div>
                                <span style="font-size: 14px; color: #777;">On track</span>
                            </div>
                        </div>
                        <div class="chart-tabs">
                            <button class="chart-tab active" data-period="month">This month</button>
                            <button class="chart-tab" data-period="quarter">This quarter</button>
                            <button class="chart-tab" data-period="year">This year</button>
                        </div>
                    </div>
                    <div class="chart-container">
                        <svg class="chart-svg" viewBox="0 0 800 250">
                            <!-- Background grid lines -->
                            <line x1="0" y1="50" x2="800" y2="50" stroke="#f0f0f0" stroke-width="1" />
                            <line x1="0" y1="100" x2="800" y2="100" stroke="#f0f0f0" stroke-width="1" />
                            <line x1="0" y1="150" x2="800" y2="150" stroke="#f0f0f0" stroke-width="1" />
                            <line x1="0" y1="200" x2="800" y2="200" stroke="#f0f0f0" stroke-width="1" />

                            <!-- Blue line -->
                            <path d="M0,120 C100,100 150,180 250,150 C350,120 450,60 550,70 C650,80 750,50 800,40" fill="none" stroke="#4c30f5" stroke-width="3" class="chart-line-primary" />

                            <!-- Light blue line -->
                            <path d="M0,160 C100,140 150,120 250,130 C350,140 450,120 550,120 C650,125 750,100 800,110" fill="none" stroke="#5ecef4" stroke-width="2" class="chart-line-secondary" />

                            <!-- Chart labels -->
                            <text x="0" y="240" font-size="12" fill="#777">Jan</text>
                            <text x="100" y="240" font-size="12" fill="#777">Feb</text>
                            <text x="200" y="240" font-size="12" fill="#777">Mar</text>
                            <text x="300" y="240" font-size="12" fill="#777">Apr</text>
                            <text x="400" y="240" font-size="12" fill="#777">May</text>
                            <text x="500" y="240" font-size="12" fill="#777">Jun</text>
                            <text x="600" y="240" font-size="12" fill="#777">Jul</text>
                        </svg>
                        <div class="chart-label">
                            <span>Jan</span>
                            <span>Jul</span>
                        </div>
                    </div>
                </div>

                <!-- Activity Chart Section -->
                <div class="activity-chart">
                    <div class="activity-header">
                        <h2>User Activity</h2>
                        <div class="activity-filter">
                            <select id="activityFilter">
                                <option value="week">This Week</option>
                                <option value="month" selected>This Month</option>
                                <option value="quarter">This Quarter</option>
                            </select>
                        </div>
                    </div>
                    <div class="activity-bars">
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 30px;"></div>
                            <div class="activity-month">Mon</div>
                        </div>
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 50px;"></div>
                            <div class="activity-month">Tue</div>
                        </div>
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 80px;"></div>
                            <div class="activity-month">Wed</div>
                        </div>
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 60px;"></div>
                            <div class="activity-month">Thu</div>
                        </div>
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 40px;"></div>
                            <div class="activity-month">Fri</div>
                        </div>
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 70px;"></div>
                            <div class="activity-month">Sat</div>
                        </div>
                        <div class="activity-bar-item">
                            <div class="activity-bar" style="height: 20px;"></div>
                            <div class="activity-month">Sun</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bottom Dashboard Sections -->
            <div class="dashboard-bottom">
                <!-- Services Pie Chart -->
                <div class="services-pie">
                    <div class="section-header">
                        <h2>Service Requests</h2>
                        <div class="section-filter">
                            <select id="servicesFilter">
                                <option value="month" selected>This Month</option>
                                <option value="quarter">This Quarter</option>
                                <option value="year">This Year</option>
                            </select>
                        </div>
                    </div>
                    <div class="pie-chart">
                        <svg viewBox="0 0 150 150">
                            <!-- Pie chart slices -->
                            <circle cx="75" cy="75" r="60" fill="none" stroke="#4c30f5" stroke-width="30" stroke-dasharray="120 280" />
                            <circle cx="75" cy="75" r="60" fill="none" stroke="#5ecef4" stroke-width="30" stroke-dasharray="80 320" transform="rotate(-120 75 75)" />
                            <circle cx="75" cy="75" r="60" fill="none" stroke="#27ae60" stroke-width="30" stroke-dasharray="60 340" transform="rotate(-200 75 75)" />
                        </svg>
                        <div class="pie-legends">
                            <div class="pie-legend">
                                <div class="legend-dot" style="background-color: #4c30f5;"></div>
                                <div class="legend-label">Maintenance</div>
                                <div class="legend-value">12</div>
                            </div>
                            <div class="pie-legend">
                                <div class="legend-dot" style="background-color: #5ecef4;"></div>
                                <div class="legend-label">Cleaning</div>
                                <div class="legend-value">8</div>
                            </div>
                            <div class="pie-legend">
                                <div class="legend-dot" style="background-color: #27ae60;"></div>
                                <div class="legend-label">Other</div>
                                <div class="legend-value">6</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Calendar Section -->
                <div class="calendar-section">
                    <div class="section-header">
                        <h2>Calendar</h2>
                        <div class="month-selector">
                            <button style="background: none; border: none; cursor: pointer;"><i class="fas fa-chevron-left"></i></button>
                            <span style="margin: 0 10px;">May 2023</span>
                            <button style="background: none; border: none; cursor: pointer;"><i class="fas fa-chevron-right"></i></button>
                        </div>
                    </div>
                    <div class="calendar">
                        <table class="calendar-grid">
                            <thead>
                                <tr>
                                    <th>S</th>
                                    <th>M</th>
                                    <th>T</th>
                                    <th>W</th>
                                    <th>T</th>
                                    <th>F</th>
                                    <th>S</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td><div class="calendar-day other-month">30</div></td>
                                    <td><div class="calendar-day">1</div></td>
                                    <td><div class="calendar-day">2</div></td>
                                    <td><div class="calendar-day">3</div></td>
                                    <td><div class="calendar-day">4</div></td>
                                    <td><div class="calendar-day">5</div></td>
                                    <td><div class="calendar-day">6</div></td>
                                </tr>
                                <tr>
                                    <td><div class="calendar-day">7</div></td>
                                    <td><div class="calendar-day">8</div></td>
                                    <td><div class="calendar-day">9</div></td>
                                    <td><div class="calendar-day">10</div></td>
                                    <td><div class="calendar-day">11</div></td>
                                    <td><div class="calendar-day">12</div></td>
                                    <td><div class="calendar-day">13</div></td>
                                </tr>
                                <tr>
                                    <td><div class="calendar-day">14</div></td>
                                    <td><div class="calendar-day">15</div></td>
                                    <td><div class="calendar-day">16</div></td>
                                    <td><div class="calendar-day">17</div></td>
                                    <td><div class="calendar-day">18</div></td>
                                    <td><div class="calendar-day">19</div></td>
                                    <td><div class="calendar-day">20</div></td>
                                </tr>
                                <tr>
                                    <td><div class="calendar-day">21</div></td>
                                    <td><div class="calendar-day">22</div></td>
                                    <td><div class="calendar-day">23</div></td>
                                    <td><div class="calendar-day">24</div></td>
                                    <td><div class="calendar-day">25</div></td>
                                    <td><div class="calendar-day">26</div></td>
                                    <td><div class="calendar-day">27</div></td>
                                </tr>
                                <tr>
                                    <td><div class="calendar-day">28</div></td>
                                    <td><div class="calendar-day">29</div></td>
                                    <td><div class="calendar-day">30</div></td>
                                    <td><div class="calendar-day">31</div></td>
                                    <td><div class="calendar-day other-month">1</div></td>
                                    <td><div class="calendar-day other-month">2</div></td>
                                    <td><div class="calendar-day other-month">3</div></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Tasks Section -->
                <div class="tasks-section">
                    <div class="section-header">
                        <h2>Tasks</h2>
                        <button class="btn-add" id="addTaskBtn">+ Add Task</button>
                    </div>
                    <div class="task-list">
                        <div class="task-item">
                            <div class="task-checkbox checked">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="task-name completed">Review service requests</div>
                            <div class="task-actions">
                                <button class="task-menu-btn"><i class="fas fa-ellipsis-v"></i></button>
                            </div>
                        </div>
                        <div class="task-item">
                            <div class="task-checkbox">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="task-name">Approve facility reservations</div>
                            <div class="task-actions">
                                <button class="task-menu-btn"><i class="fas fa-ellipsis-v"></i></button>
                            </div>
                        </div>
                        <div class="task-item">
                            <div class="task-checkbox">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="task-name">Send monthly newsletter</div>
                            <div class="task-actions">
                                <button class="task-menu-btn"><i class="fas fa-ellipsis-v"></i></button>
                            </div>
                        </div>
                        <div class="task-item">
                            <div class="task-checkbox checked">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="task-name completed">Update community rules</div>
                            <div class="task-actions">
                                <button class="task-menu-btn"><i class="fas fa-ellipsis-v"></i></button>
                            </div>
                        </div>
                        <div class="task-item">
                            <div class="task-checkbox">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="task-name">Schedule maintenance</div>
                            <div class="task-actions">
                                <button class="task-menu-btn"><i class="fas fa-ellipsis-v"></i></button>
                            </div>
                        </div>
                    </div>
                    <div class="add-task-form" id="addTaskForm">
                        <input type="text" class="add-task-input" placeholder="Enter task description">
                        <div class="add-task-buttons">
                            <button class="btn-cancel" id="cancelTaskBtn">Cancel</button>
                            <button class="btn-add">Add Task</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
                // Enhanced JavaScript for the Admin Dashboard

        document.addEventListener('DOMContentLoaded', function() {
            // Notification dropdown toggle
            const notificationBtn = document.getElementById('notificationBtn');
            const notificationMenu = document.getElementById('notificationMenu');

            if (notificationBtn && notificationMenu) {
                notificationBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    notificationMenu.classList.toggle('show');
                });

                // Close notification dropdown when clicking elsewhere
                document.addEventListener('click', function() {
                    notificationMenu.classList.remove('show');
                });

                // Prevent closing when clicking inside the menu
                notificationMenu.addEventListener('click', function(e) {
                    e.stopPropagation();
                });
            }

            // Chart period tabs
            const chartTabs = document.querySelectorAll('.chart-tab');
            chartTabs.forEach(tab => {
                tab.addEventListener('click', function() {
                    // Remove active class from all tabs
                    chartTabs.forEach(t => t.classList.remove('active'));

                    // Add active class to clicked tab
                    this.classList.add('active');

                    // Get the period from data attribute
                    const period = this.getAttribute('data-period');

                    // Update chart data based on period (simulated)
                    updateChartData(period);
                });
            });

            // Simulated function to update chart data
            function updateChartData(period) {
                // Values would be fetched from API in a real application
                const chartData = {
                    month: {
                        revenue: '$37.5K',
                        percentage: '+2.45%',
                        primary: 'M0,120 C100,100 150,180 250,150 C350,120 450,60 550,70 C650,80 750,50 800,40',
                        secondary: 'M0,160 C100,140 150,120 250,130 C350,140 450,120 550,120 C650,125 750,100 800,110'
                    },
                    quarter: {
                        revenue: '$112.8K',
                        percentage: '+5.27%',
                        primary: 'M0,100 C100,80 150,140 250,120 C350,100 450,50 550,60 C650,70 750,40 800,30',
                        secondary: 'M0,140 C100,120 150,100 250,110 C350,120 450,100 550,100 C650,105 750,80 800,90'
                    },
                    year: {
                        revenue: '$438.9K',
                        percentage: '+12.35%',
                        primary: 'M0,80 C100,60 150,120 250,100 C350,80 450,30 550,40 C650,50 750,20 800,10',
                        secondary: 'M0,120 C100,100 150,80 250,90 C350,100 450,80 550,80 C650,85 750,60 800,70'
                    }
                };

                // Update DOM elements with new data
                const data = chartData[period] || chartData.month;

                document.getElementById('revenueTotal').textContent = data.revenue;
                document.getElementById('revenuePercentage').textContent = data.percentage;

                // Update SVG paths (if they exist)
                const primaryPath = document.querySelector('.chart-line-primary');
                const secondaryPath = document.querySelector('.chart-line-secondary');

                if (primaryPath) primaryPath.setAttribute('d', data.primary);
                if (secondaryPath) secondaryPath.setAttribute('d', data.secondary);
            }

            // Task checkbox toggle with animation
            const taskCheckboxes = document.querySelectorAll('.task-checkbox');
            taskCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('click', function() {
                    // Toggle checked class
                    this.classList.toggle('checked');

                    // Toggle completed class on task name
                    const taskName = this.nextElementSibling;
                    taskName.classList.toggle('completed');

                    // Update task status in a real application
                    // updateTaskStatus(taskId, this.classList.contains('checked'));
                });
            });

            // Add task form toggle
            const addTaskBtn = document.getElementById('addTaskBtn');
            const addTaskForm = document.getElementById('addTaskForm');
            const cancelTaskBtn = document.getElementById('cancelTaskBtn');

            if (addTaskBtn && addTaskForm) {
                addTaskBtn.addEventListener('click', function() {
                    addTaskForm.classList.add('show');
                    // Focus on input field
                    const input = addTaskForm.querySelector('.add-task-input');
                    if (input) input.focus();
                });
            }

            if (cancelTaskBtn && addTaskForm) {
                cancelTaskBtn.addEventListener('click', function() {
                    addTaskForm.classList.remove('show');
                });
            }

            // Task adding functionality
            const taskAddBtn = document.querySelector('.add-task-form .btn-add');
            if (taskAddBtn) {
                taskAddBtn.addEventListener('click', function() {
                    const input = document.querySelector('.add-task-input');
                    if (input && input.value.trim() !== '') {
                        addNewTask(input.value.trim());
                        input.value = '';
                        addTaskForm.classList.remove('show');
                    }
                });
            }

            // Function to add new task
            function addNewTask(taskName) {
                const taskList = document.querySelector('.task-list');
                if (!taskList) return;

                // Create new task element
                const taskItem = document.createElement('div');
                taskItem.className = 'task-item';

                taskItem.innerHTML = `
                    <div class="task-checkbox">
                        <i class="fas fa-check"></i>
                    </div>
                    <div class="task-name">${taskName}</div>
                    <div class="task-actions">
                        <button class="task-menu-btn"><i class="fas fa-ellipsis-v"></i></button>
                    </div>
                `;

                // Add the task to the list
                taskList.appendChild(taskItem);

                // Add event listener to new checkbox
                const checkbox = taskItem.querySelector('.task-checkbox');
                checkbox.addEventListener('click', function() {
                    this.classList.toggle('checked');
                    const name = this.nextElementSibling;
                    name.classList.toggle('completed');
                });

                // Add event listener to menu button
                const menuBtn = taskItem.querySelector('.task-menu-btn');
                menuBtn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    showTaskMenu(this);
                });
            }

            // Task menu dropdown
            const taskMenuBtns = document.querySelectorAll('.task-menu-btn');
            taskMenuBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.stopPropagation();
                    showTaskMenu(this);
                });
            });

            function showTaskMenu(button) {
                // Remove any existing menus
                const existingMenus = document.querySelectorAll('.task-menu');
                existingMenus.forEach(menu => menu.remove());

                // Create new menu
                const menu = document.createElement('div');
                menu.className = 'task-menu show';
                menu.innerHTML = `
                    <div class="task-menu-item edit-task">Edit</div>
                    <div class="task-menu-item delete-task">Delete</div>
                `;
                document.body.appendChild(menu);

                // Position menu near button
                const rect = button.getBoundingClientRect();
                menu.style.top = `${rect.bottom}px`;
                menu.style.left = `${rect.left - 100}px`;

                // Add event listeners to menu items
                const editBtn = menu.querySelector('.edit-task');
                const deleteBtn = menu.querySelector('.delete-task');
                const taskItem = button.closest('.task-item');

                if (editBtn) {
                    editBtn.addEventListener('click', function() {
                        if (taskItem) {
                            const taskName = taskItem.querySelector('.task-name');
                            if (taskName) {
                                // Simple edit implementation - in a real app, you'd show a modal or form
                                const newName = prompt('Edit task:', taskName.textContent);
                                if (newName && newName.trim() !== '') {
                                    taskName.textContent = newName;
                                }
                            }
                        }
                        menu.remove();
                    });
                }

                if (deleteBtn) {
                    deleteBtn.addEventListener('click', function() {
                        if (taskItem) {
                            taskItem.remove();
                        }
                        menu.remove();
                    });
                }

                // Close menu when clicking elsewhere
                setTimeout(() => {
                    document.addEventListener('click', function closeMenu() {
                        menu.remove();
                        document.removeEventListener('click', closeMenu);
                    });
                }, 100);
            }

            // Calendar functionality
            initializeCalendar();

            function initializeCalendar() {
                const calendarDays = document.querySelectorAll('.calendar-day');

                calendarDays.forEach(day => {
                    day.addEventListener('click', function() {
                        // Remove active class from all days
                        calendarDays.forEach(d => d.classList.remove('active'));

                        // Add active class to clicked day
                        this.classList.add('active');

                        // In a real app, you would fetch events for this day
                        // fetchEventsForDay(this.textContent);
                    });
                });

                // Set today's date as active
                const today = new Date().getDate();
                calendarDays.forEach(day => {
                    if (parseInt(day.textContent) === today && !day.classList.contains('other-month')) {
                        day.classList.add('today');
                    }
                });
            }

            // Activity chart functionality
            const activityFilter = document.getElementById('activityFilter');
            if (activityFilter) {
                activityFilter.addEventListener('change', function() {
                    // Update activity chart based on selected period
                    updateActivityChart(this.value);
                });
            }

            function updateActivityChart(period) {
                // Simulated data - in a real app, would come from API
                const activityData = {
                    week: [30, 50, 80, 60, 40, 70, 20],
                    month: [40, 60, 90, 70, 50, 80, 30],
                    quarter: [50, 70, 100, 80, 60, 90, 40]
                };

                const data = activityData[period] || activityData.month;
                const bars = document.querySelectorAll('.activity-bar');

                if (bars.length === data.length) {
                    bars.forEach((bar, index) => {
                        // Animate height change
                        bar.style.height = `${data[index]}px`;
                    });
                }
            }

            // Initialize activity chart with default data
            updateActivityChart('month');

            // Services pie chart filter
            const servicesFilter = document.getElementById('servicesFilter');
            if (servicesFilter) {
                servicesFilter.addEventListener('change', function() {
                    // Update services pie chart based on selected period
                    updateServicesPieChart(this.value);
                });
            }

            function updateServicesPieChart(period) {
                // Simulated data
                const servicesData = {
                    month: {
                        maintenance: 12,
                        cleaning: 8,
                        other: 6
                    },
                    quarter: {
                        maintenance: 35,
                        cleaning: 22,
                        other: 18
                    },
                    year: {
                        maintenance: 142,
                        cleaning: 98,
                        other: 76
                    }
                };

                const data = servicesData[period] || servicesData.month;

                // Update legend values
                const legendValues = document.querySelectorAll('.legend-value');
                if (legendValues.length >= 3) {
                    legendValues[0].textContent = data.maintenance;
                    legendValues[1].textContent = data.cleaning;
                    legendValues[2].textContent = data.other;
                }

                // In a real implementation, you would also update the SVG circles
                // representing the pie chart segments
                const total = data.maintenance + data.cleaning + data.other;
                const circles = document.querySelectorAll('.pie-chart svg circle');

                if (circles.length >= 3) {
                    // Calculate percentages for stroke-dasharray
                    const maintenancePercent = (data.maintenance / total) * 360;
                    const cleaningPercent = (data.cleaning / total) * 360;
                    const otherPercent = (data.other / total) * 360;

                    circles[0].setAttribute('stroke-dasharray', `${maintenancePercent} ${360 - maintenancePercent}`);
                    circles[1].setAttribute('stroke-dasharray', `${cleaningPercent} ${360 - cleaningPercent}`);
                    circles[2].setAttribute('stroke-dasharray', `${otherPercent} ${360 - otherPercent}`);
                }
            }

            // Simulate loading for charts
            simulateChartLoading();

            function simulateChartLoading() {
                const chartContainers = document.querySelectorAll('.chart-container, .pie-chart');
                chartContainers.forEach(container => {
                    const loading = document.createElement('div');
                    loading.className = 'loading';
                    loading.innerHTML = '<div class="spinner"></div>';
                    container.appendChild(loading);

                    // Simulate data loading delay
                    setTimeout(() => {
                        loading.remove();
                    }, 1500);
                });
            }
        });
    </script>
</body>
</html>
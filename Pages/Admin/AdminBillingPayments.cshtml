@page


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Billing and Payments - Vista</title>
    <link rel="stylesheet" href="~/css/adminsidebar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: white;
            margin: 5% auto;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            width: 500px;
            max-width: 90%;
            position: relative;
        }

        .close {
            position: absolute;
            right: 20px;
            top: 15px;
            color: #aaa;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }

            .close:hover {
                color: #333;
            }

        .form-group {
            margin-bottom: 20px;
        }

            .form-group label {
                display: block;
                margin-bottom: 8px;
                font-weight: 500;
                font-size: 14px;
            }

            .form-group input,
            .form-group select,
            .form-group textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                font-size: 14px;
            }

        .form-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        .btn-cancel {
            background-color: #f3f4f6;
            color: #333;
        }

        .btn-submit {
            background-color: #3b82f6;
            color: white;
        }

        .checkbox-group {
            margin-bottom: 20px;
        }

            .checkbox-group label {
                display: block;
                padding: 8px 0;
                font-size: 14px;
            }

            .checkbox-group input[type="checkbox"] {
                margin-right: 10px;
            }

        .export-options {
            display: flex;
            justify-content: space-around;
            margin: 20px 0;
        }

        .export-option {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.2s;
        }

            .export-option:hover {
                background-color: #f3f4f6;
                border-color: #3b82f6;
            }

            .export-option i {
                font-size: 30px;
                margin-bottom: 8px;
            }

        .loading-spinner {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.7);
            z-index: 1000;
            align-items: center;
            justify-content: center;
        }

        .spinner {
            border: 5px solid #f3f3f3;
            border-radius: 50%;
            border-top: 5px solid #3b82f6;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 15px 25px;
            border-radius: 4px;
            display: none;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        }

            .toast.error {
                background-color: #f44336;
            }

        body {
            background-color: #f5f5f5;
        }

        .dashboard-wrapper {
            display: flex;
            min-height: 100vh;
        }

        .main-content {
            width: calc(90% - 250px);
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .header h1 {
                font-size: 24px;
                font-weight: 700;
                color: #000;
            }

        .header-buttons {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 8px 15px;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            border: none;
        }

        .btn-export {
            background-color: #fff;
            color: #333;
            border: 1px solid #ddd;
        }

        .btn-reminder {
            background-color: #22c55e;
            color: white;
        }

        .btn-invoice {
            background-color: #3b82f6;
            color: white;
        }

        .cards-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .card-title {
            font-size: 12px;
            color: #6b7280;
            text-transform: uppercase;
            margin-bottom: 10px;
        }

        .card-value {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .card-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 12px;
        }

        .percentage {
            display: flex;
            align-items: center;
        }

            .percentage.positive {
                color: #22c55e;
            }

            .percentage.negative {
                color: #ef4444;
            }

        .households {
            color: #ef4444;
        }

        .card-compliance {
            grid-column: span 1;
        }

        .billing-history {
            background-color: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

            .billing-history h2 {
                font-size: 18px;
                margin-bottom: 15px;
            }

        .search-container {
            margin-bottom: 15px;
        }

            .search-container input {
                width: 100%;
                padding: 8px 12px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th {
            text-align: left;
            padding: 12px;
            font-size: 14px;
            color: #6b7280;
            font-weight: 500;
            border-bottom: 1px solid #eee;
        }

        td {
            padding: 12px;
            font-size: 14px;
            border-bottom: 1px solid #eee;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            color: white;
            font-size: 12px;
            font-weight: 500;
        }

        .status-paid {
            background-color: #22c55e;
        }

        .status-pending {
            background-color: #eab308;
        }

        .status-overdue {
            background-color: #ef4444;
        }

        .action-menu {
            text-align: center;
            color: #6b7280;
            cursor: pointer;
        }

        .date-filter {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            margin-bottom: 15px;
        }

            .date-filter span {
                background: #f3f4f6;
                padding: 6px 12px;
                border-radius: 4px;
                font-size: 14px;
                display: flex;
                align-items: center;
                gap: 5px;
            }
    </style>
</head>
<body>
    <!-- Modal for Create Invoice -->
    <div id="invoiceModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Create New Invoice</h2>
            <form id="invoiceForm">
                <div class="form-group">
                    <label for="resident">Resident:</label>
                    <select id="resident" required>
                        <option value="">Select Resident</option>
                        <option value="1">Unit 101 - John Smith</option>
                        <option value="2">Unit 102 - Maria Garcia</option>
                        <option value="3">Unit 201 - Robert Johnson</option>
                        <option value="4">Unit 202 - Sarah Lee</option>
                        <option value="5">Unit 301 - David Wong</option>
                        <option value="6">Unit 302 - Emily Chen</option>
                        <option value="7">Unit 401 - Michael Brown</option>
                        <option value="8">Unit 402 - Jennifer Taylor</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="amount">Amount (₱):</label>
                    <input type="number" id="amount" step="0.01" min="0" required>
                </div>
                <div class="form-group">
                    <label for="dueDate">Due Date:</label>
                    <input type="date" id="dueDate" required>
                </div>
                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" rows="4" required></textarea>
                </div>
                <div class="form-buttons">
                    <button type="button" class="btn btn-cancel" onclick="closeModal('invoiceModal')">Cancel</button>
                    <button type="submit" class="btn btn-submit">Create Invoice</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Modal for Send Reminders -->
    <div id="reminderModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('reminderModal')">&times;</span>
            <h2>Send Payment Reminders</h2>
            <p>Select which households to send payment reminders to:</p>
            <form id="reminderForm">
                <div class="checkbox-group">
                    <label><input type="checkbox" value="all"> Select All</label>
                    <label><input type="checkbox" value="1"> Unit 102 - Maria Garcia (₱1,250.00)</label>
                    <label><input type="checkbox" value="2"> Unit 204 - Thomas Wilson (₱750.00)</label>
                    <label><input type="checkbox" value="3"> Unit 305 - Jennifer Lopez (₱1,100.00)</label>
                    <label><input type="checkbox" value="4"> Unit 401 - Michael Brown (₱680.00)</label>
                    <label><input type="checkbox" value="5"> Unit 505 - Lisa Anderson (₱950.00)</label>
                    <label><input type="checkbox" value="6"> Unit 303 - James Rodriguez (₱480.00)</label>
                </div>
                <div class="form-group">
                    <label for="reminderMessage">Additional Message (Optional):</label>
                    <textarea id="reminderMessage" rows="3" placeholder="Add a custom message to your payment reminder"></textarea>
                </div>
                <div class="form-buttons">
                    <button type="button" class="btn btn-cancel" onclick="closeModal('reminderModal')">Cancel</button>
                    <button type="submit" class="btn btn-submit">Send Reminders</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Export Options Modal -->
    <div id="exportModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('exportModal')">&times;</span>
            <h2>Export Payment Data</h2>
            <div class="export-options">
                <div class="export-option" onclick="downloadFile('excel')">
                    <i class="fas fa-file-excel"></i>
                    <span>Excel (.xlsx)</span>
                </div>
                <div class="export-option" onclick="downloadFile('csv')">
                    <i class="fas fa-file-csv"></i>
                    <span>CSV (.csv)</span>
                </div>
                <div class="export-option" onclick="downloadFile('pdf')">
                    <i class="fas fa-file-pdf"></i>
                    <span>PDF (.pdf)</span>
                </div>
            </div>
            <div class="form-group">
                <label for="dateRange">Date Range:</label>
                <select id="dateRange">
                    <option value="current">Current Month</option>
                    <option value="previous">Previous Month</option>
                    <option value="quarter">Last Quarter</option>
                    <option value="year">Year to Date</option>
                    <option value="custom">Custom Range</option>
                </select>
            </div>
            <div class="form-group custom-date-range" style="display: none;">
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate">
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate">
            </div>
            <div class="form-buttons">
                <button type="button" class="btn btn-cancel" onclick="closeModal('exportModal')">Cancel</button>
                <button type="button" class="btn btn-submit" onclick="confirmExport()">Export</button>
            </div>
        </div>
    </div>
    <div class="dashboard-wrapper">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="logo">
                <img src="~/Images/logo 1.png" alt="Vista Logo">
                <span>vista.</span>
            </div>
            <nav class="nav-menu">
                <ul>
                    <li>
                        <a href="/Admin/AdminDashboard">
                            <i class="fas fa-th-large"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminAnnouncements">
                            <i class="fas fa-bullhorn"></i>
                            <span>Announcements</span>
                        </a>
                    </li>
                    <li class="active">
                        <a href="/Admin/AdminBillingPayments">
                            <i class="fas fa-file-invoice-dollar"></i>
                            <span>Billing & Payments</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminFacilityReservation">
                            <i class="fas fa-calendar-check"></i>
                            <span>Facility Reservation</span>
                        </a>
                    </li>
                    <li>
                        <a href="~/Admin/AdminServiceRequests">
                            <i class="fas fa-hands-helping"></i>
                            <span>Service Requests</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminDocuments">
                            <i class="fas fa-file-alt"></i>
                            <span>Documents</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminAccountPrivileges">
                            <i class="fas fa-user-shield"></i>
                            <span>Account Privilege</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminEventCalendar">
                            <i class="fas fa-calendar-alt"></i>
                            <span>Events Calendar</span>
                        </a>
                    </li>
                    <li>
                        <a href="/Admin/AdminEditProfile">
                            <i class="fas fa-user-circle"></i>
                            <span>Edit Profile</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main content -->
        <main class="main-content">
            <div class="header">
                <h1>Billing and Payments</h1>
                <div class="header-buttons">
                    <button class="btn btn-export" id="exportBtn" onclick="exportData()">Export</button>
                    <button class="btn btn-reminder" id="reminderBtn" onclick="sendReminders()">Send Reminders</button>
                    <button class="btn btn-invoice" id="createInvoiceBtn" onclick="createInvoice()">+ Create Invoice</button>
                </div>
            </div>

            <div class="cards-container">
                <div class="card">
                    <div class="card-title">TOTAL COLLECTED THIS MONTH</div>
                    <div class="card-value">₱28,456.00</div>
                    <div class="card-footer">
                        <div class="percentage positive">+12.5% from last month</div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-title">PENDING PAYMENTS</div>
                    <div class="card-value">₱5,210.00</div>
                    <div class="card-footer">
                        <div class="households">8 households</div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-title">OVERDUE PAYMENTS</div>
                    <div class="card-value">₱3,180.00</div>
                    <div class="card-footer">
                        <div class="households">5 households</div>
                    </div>
                </div>

                <div class="card card-compliance">
                    <div class="card-title">PAYMENT COMPLIANCE</div>
                    <div class="card-value">92%</div>
                    <div class="card-footer">
                        <div class="percentage positive">+2% from last month</div>
                    </div>
                </div>
            </div>

            <div class="billing-history">
                <h2>Billing History</h2>
                <div class="search-container">
                    <input type="text" id="searchInput" placeholder="Search user" onkeyup="searchInvoices()">
                </div>

                <div class="date-filter">
                    <span>
                        <i class="fas fa-calendar"></i> March 2025
                    </span>
                </div>

                <div class="table-container">
                    <table>
                        <thead>
                            <tr>
                                <th>Invoice</th>
                                <th>Status</th>
                                <th>Billing Date</th>
                                <th>Amount</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="invoiceTableBody">
                            <tr data-user="John Smith" data-unit="101">
                                <td>
                                    Invoice<br>
                                    <span style="color: #6b7280; font-size: 12px;">#007 - March 2025</span>
                                </td>
                                <td><span class="status-badge status-paid">Paid</span></td>
                                <td>March 12, 2025</td>
                                <td>PHP 2,150.00</td>
                                <td class="action-menu">...</td>
                            </tr>
                            <tr data-user="Maria Garcia" data-unit="102">
                                <td>
                                    Invoice<br>
                                    <span style="color: #6b7280; font-size: 12px;">#006 - March 2025</span>
                                </td>
                                <td><span class="status-badge status-pending">Pending</span></td>
                                <td>March 12, 2025</td>
                                <td>PHP 4,021.00</td>
                                <td class="action-menu">...</td>
                            </tr>
                            <tr data-user="Robert Johnson" data-unit="201">
                                <td>
                                    Invoice<br>
                                    <span style="color: #6b7280; font-size: 12px;">#005 - March 2025</span>
                                </td>
                                <td><span class="status-badge status-paid">Paid</span></td>
                                <td>March 10, 2025</td>
                                <td>PHP 1,000.00</td>
                                <td class="action-menu">...</td>
                            </tr>
                            <tr data-user="Sarah Lee" data-unit="202">
                                <td>
                                    Invoice<br>
                                    <span style="color: #6b7280; font-size: 12px;">#004 - March 2025</span>
                                </td>
                                <td><span class="status-badge status-overdue">Overdue</span></td>
                                <td>March 10, 2025</td>
                                <td>PHP 900.00</td>
                                <td class="action-menu">...</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>
    <!-- Loading Spinner -->
    <div class="loading-spinner" id="loadingSpinner">
        <div class="spinner"></div>
    </div>

    <!-- Toast Message -->
    <div class="toast" id="toastMessage"></div>

    <script>
        // Function to show modal
        function showModal(modalId) {
            document.getElementById(modalId).style.display = 'block';
        }

        // Function to close modal
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = 'none';
            }
        }

        // Close modal when clicking X
        document.querySelectorAll('.close').forEach(function(element) {
            element.addEventListener('click', function() {
                this.closest('.modal').style.display = 'none';
            });
        });

        // Handle date range selection for export
        document.getElementById('dateRange').addEventListener('change', function() {
            const customDateRange = document.querySelector('.custom-date-range');
            if (this.value === 'custom') {
                customDateRange.style.display = 'block';
            } else {
                customDateRange.style.display = 'none';
            }
        });

        // Handle "Select All" checkbox for reminders
        document.querySelector('.checkbox-group input[value="all"]').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.checkbox-group input[type="checkbox"]');
            checkboxes.forEach(checkbox => {
                if (checkbox.value !== 'all') {
                    checkbox.checked = this.checked;
                }
            });
        });

        // Export function
        function exportData() {
            showModal('exportModal');
        }

        // Send Reminders function
        function sendReminders() {
            showModal('reminderModal');
        }

        // Create Invoice function
        function createInvoice() {
            showModal('invoiceModal');
        }

        // Download file function
        function downloadFile(fileType) {
            // Set active state on selected export option
            document.querySelectorAll('.export-option').forEach(option => {
                option.style.backgroundColor = '';
                option.style.borderColor = '#ddd';
            });

            event.currentTarget.style.backgroundColor = '#f0f9ff';
            event.currentTarget.style.borderColor = '#3b82f6';
        }

        // Confirm export function
        function confirmExport() {
            // Show loading spinner
            document.getElementById('loadingSpinner').style.display = 'flex';

            // Simulate export process
            setTimeout(function() {
                // Hide loading spinner
                document.getElementById('loadingSpinner').style.display = 'none';

                // Close modal
                closeModal('exportModal');

                // Show success message
                showToast('File exported successfully!');
            }, 1500);
        }

        // Show toast message
        function showToast(message, isError = false) {
            const toast = document.getElementById('toastMessage');
            toast.textContent = message;

            if (isError) {
                toast.classList.add('error');
            } else {
                toast.classList.remove('error');
            }

            toast.style.display = 'block';

            // Hide toast after 3 seconds
            setTimeout(function() {
                toast.style.display = 'none';
            }, 3000);
        }

        // Invoice counter for new invoices
        let nextInvoiceNumber = 8; // Starting at #008

        // Search function for invoices
        function searchInvoices() {
            const searchInput = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('#invoiceTableBody tr');

            rows.forEach(row => {
                const userData = row.getAttribute('data-user')?.toLowerCase() || '';
                const unitData = row.getAttribute('data-unit')?.toLowerCase() || '';
                const invoiceText = row.querySelector('td:first-child').textContent.toLowerCase();

                // Check if search term appears in any relevant data
                if (userData.includes(searchInput) ||
                    unitData.includes(searchInput) ||
                    invoiceText.includes(searchInput)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });

            // Show message if no results
            const visibleRows = document.querySelectorAll('#invoiceTableBody tr:not([style*="display: none"])');
            const noResultsMessage = document.getElementById('noResultsMessage');

            if (visibleRows.length === 0 && searchInput !== '') {
                if (!noResultsMessage) {
                    const tableBody = document.getElementById('invoiceTableBody');
                    const noResults = document.createElement('tr');
                    noResults.id = 'noResultsMessage';
                    noResults.innerHTML = `<td colspan="5" style="text-align: center; padding: 20px;">No invoices found matching "${searchInput}"</td>`;
                    tableBody.appendChild(noResults);
                }
            } else if (noResultsMessage) {
                noResultsMessage.remove();
            }
        }

        // Form submission handlers
        document.getElementById('invoiceForm').addEventListener('submit', function(e) {
            e.preventDefault();

            // Get form values
            const residentSelect = document.getElementById('resident');
            const residentOption = residentSelect.options[residentSelect.selectedIndex];
            const residentText = residentOption.text;
            const residentUnit = residentText.split(' - ')[0].replace('Unit ', '');
            const residentName = residentText.split(' - ')[1];
            const amount = document.getElementById('amount').value;
            const dueDate = document.getElementById('dueDate').value;

            // Validate form
            if (!residentSelect.value || !amount || !dueDate) {
                showToast('Please fill in all required fields', true);
                return;
            }

            // Show loading spinner
            document.getElementById('loadingSpinner').style.display = 'flex';

            // Simulate form submission
            setTimeout(function() {
                // Hide loading spinner
                document.getElementById('loadingSpinner').style.display = 'none';

                // Close modal
                closeModal('invoiceModal');

                // Format invoice number with leading zeros
                const invoiceNumber = String(nextInvoiceNumber).padStart(3, '0');
                nextInvoiceNumber++;

                // Format date for display
                const today = new Date();
                const formattedDate = today.toLocaleDateString('en-US', {
                    month: 'long',
                    day: 'numeric',
                    year: 'numeric'
                });

                // Format amount with comma separators
                const formattedAmount = new Intl.NumberFormat('en-PH', {
                    style: 'decimal',
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                }).format(amount);

                // Create new row
                const table = document.getElementById('invoiceTableBody');
                const newRow = document.createElement('tr');
                newRow.setAttribute('data-user', residentName);
                newRow.setAttribute('data-unit', residentUnit);
                newRow.innerHTML = `
                    <td>
                        Invoice<br>
                        <span style="color: #6b7280; font-size: 12px;">#${invoiceNumber} - March 2025</span>
                    </td>
                    <td><span class="status-badge status-pending">Pending</span></td>
                    <td>${formattedDate}</td>
                    <td>PHP ${formattedAmount}</td>
                    <td class="action-menu">...</td>
                `;

                // Insert at the beginning
                table.insertBefore(newRow, table.firstChild);

                // Update pending payments count and amount in dashboard
                updateDashboardStats('pending', parseFloat(amount));

                // Show success message
                showToast('Invoice created successfully!');

                // Reset form
                document.getElementById('invoiceForm').reset();
            }, 1500);
        });

        // Function to update dashboard statistics
        function updateDashboardStats(type, amount) {
            if (type === 'pending') {
                // Update pending payments card
                const pendingAmountElement = document.querySelector('.cards-container .card:nth-child(2) .card-value');
                const pendingHouseholdsElement = document.querySelector('.cards-container .card:nth-child(2) .households');

                // Extract current amount without currency symbol and commas
                const currentAmount = parseFloat(pendingAmountElement.textContent
                    .replace('₱', '')
                    .replace(',', '')
                    .trim());

                // Extract current households count
                const currentHouseholds = parseInt(pendingHouseholdsElement.textContent.split(' ')[0]);

                // Update values
                const newAmount = currentAmount + amount;
                const newHouseholds = currentHouseholds + 1;

                // Format new amount
                const formattedAmount = new Intl.NumberFormat('en-PH', {
                    style: 'decimal',
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                }).format(newAmount);

                // Update DOM
                pendingAmountElement.textContent = `₱${formattedAmount}`;
                pendingHouseholdsElement.textContent = `${newHouseholds} households`;
            }
        }

        document.getElementById('reminderForm').addEventListener('submit', function(e) {
            e.preventDefault();

            // Count selected checkboxes (excluding "Select All")
            const selectedCheckboxes = Array.from(
                document.querySelectorAll('.checkbox-group input[type="checkbox"]:checked')
            ).filter(checkbox => checkbox.value !== 'all');

            if (selectedCheckboxes.length === 0) {
                showToast('Please select at least one household', true);
                return;
            }

            // Show loading spinner
            document.getElementById('loadingSpinner').style.display = 'flex';

            // Simulate sending reminders
            setTimeout(function() {
                // Hide loading spinner
                document.getElementById('loadingSpinner').style.display = 'none';

                // Close modal
                closeModal('reminderModal');

                // Show success message
                showToast(`Payment reminders sent to ${selectedCheckboxes.length} households!`);

                // Reset form
                document.getElementById('reminderForm').reset();
            }, 1500);
        });
    </script>
</body>
</html>